/* domino.js - a JS fast dashboard prototyping framework - Version: 1.2 - Author: Alexis Jacomy, Linkfluence - License: MIT */
(function(K, h) {
    function ja() {
        L.strict ? u.apply(this, arguments) : ma.apply(this, arguments)
    }
    function u() {
        var a = "",
            h;
        for (h in arguments) a += (a ? " " : "") + arguments[h];
        throw Error(a);
    }
    function ma() {
        L.verbose && da.apply(this, arguments)
    }
    function da() {
        var a = [],
            h;
        for (h in arguments) a.push(arguments[h]);
        L.displayTime && a.unshift(("00000000" + ((new Date)
            .getTime() - na))
            .substr(-8));
        console && console.log instanceof Function && console.log.apply(console, a)
    }
    var ka = /^[a-zA-Z_$-][a-zA-Z_$0-9-]*$/,
        na = new Date,
        U = {};
    if (K.domino) throw Error("domino already exists");
    K.domino = function(a, d) {
        function j(b) {
            var b = b || {}, g = {
                getEvents: A,
                getLabel: oa,
                expand: P,
                warn: t,
                log: B,
                die: p,
                get: o
            };
            b.full ? (g.kill = T, g.update = c, g.addModule = e, g.request = m, g.settings = C, g.dispatchEvent = function(b, g) {
                r({
                    events: I.getEvent(b, g)
                });
                return this
            }) : (b.request && (Object.defineProperty(g, "_services", {
                value: []
            }), g.request = function(b, g) {
                this._services.push({
                    service: b,
                    params: g
                });
                return this
            }), b.dispatchEvent && (Object.defineProperty(g, "_events", {
                value: []
            }), g.dispatchEvent = function(b, g) {
                this._events.push({
                    type: b,
                    data: g
                });
                return this
            }));
            return g
        }
        function l(b) {
            b.request !== h && (b.request = function() {
                p("This method is no longer available.");
                return this
            });
            b.dispatchEvent !== h && (b.dispatchEvent = function() {
                p("This method is no longer available.");
                return this
            })
        }
        function i(b, g) {
            var a, ea, c = g || {};
            b === h && p("Property name not specified");
            "string" !== k.get(b) && p("The property name must be a string");
            M[b] !== h && p('Property "' + b + '" already exists');
            $[b] !== h && p('"' + b + '" can not be used to name a property');
            b.match(ka) || p("Property name not valid (" + ka + ")");
            fa[b] = {};
            for (ea in c) fa[b][ea] = c[ea];
            K[b] = c.label || b;
            c.type !== h && (k.isValid(c.type) ? N[b] = c.type : t('Property "' + b + '": Type not valid'));
            c.setter !== h && ("function" !== k.get(c.setter) ? t('Property "' + b + '": Setter is not a function') : (D[b] = c.setter, ga[b] = !0));
            D[b] = D[b] || function(g) {
                if (k.deepScalar(N[b]) && k.compare(g, M[b], N[b])) return !1;
                N[b] && !k.check(N[b], g) ? t('Property "' + b + '": Wrong type error') : M[b] = g;
                return !0
            };
            c.getter !== h && ("function" !== k.get(c.getter) ? t('Property "' + b + '": Getter is not a function') : (E[b] = c.getter, ha[b] = !0));
            E[b] = E[b] || function() {
                return M[b]
            };
            if (c.value !== h || N[b]) c.value !== h ? z(b, c.value) : B('Property "' + b + '": Initial value is missing');
            if (c.triggers !== h) for (a in !k.check("array|string", c.triggers) && t('Property "' + b + '": Events ("triggers") must be specified in an array or separated by spaces in a string'), O[b] = w.array(c.triggers), O[b] || []) Q[O[b][a]] = Q[O[b][a]] || [], Q[O[b][a]].push(b);
            c.dispatch !== h && (!k.check("array|string", c.dispatch) ? t('Property "' + b + '": Events ("dispatch") must be specified in an array or separated by spaces in a string') : V[b] = w.array(c.dispatch));
            return I
        }
        function n(b) {
            var g = b || {};
            (g.id === h || "string" !== k.get(g.id)) && p("The service id is not indicated.");
            k.check("function|string", g.url) || p("The service URL is not valid.");
            W[g.id] !== h && p('The service "' + g.id + '" already exists.');
            W[g.id] = function(b) {
                B('Calling service "' + g.id + '".');
                var a = b || {}, c = a.shortcuts || {}, q = {
                    contentType: a.contentType || g.contentType,
                    dataType: a.dataType || g.dataType,
                    type: (a.type || g.type || "GET")
                        .toString()
                        .toUpperCase(),
                    data: a.data !== h ? a.data : "function" === k.get(g.data) ? g.data.call(j(), a) : g.data,
                    url: "function" === k.get(g.url) ? g.url.call(j(), a) : g.url,
                    error: function(b, c) {
                        I.dispatchEvent("domino.ajaxFailed");
                        var F = a.error || g.error;
                        B('Loading service "' + g.id + '" failed with message "' + b + '" and status ' + c.status + ".");
                        "function" === k.get(F) && G(F, {
                            parameters: [b, c, a],
                            loop: !0,
                            scope: {
                                request: !0,
                                dispatchEvent: !0
                            }
                        })
                    }
                }, f, e, o;
                e = C("shortcutPrefix");
                var b = RegExp(e + "(\\w+)", "g"),
                    i = RegExp("^" + e + "(\\w+)$"),
                    d = null,
                    m;
                for ("string" !== k.get(q.url) && p('The URL is no more a string (typed "' + k.get(q.url) + '")');
                (m = q.url.match(b)) && q.url !== d;) for (f in d = q.url, m) e = P(m[f].match(i)[1], c), q.url = q.url.replace(RegExp(m[f], "g"), e);
                f = !0;
                "string" === k.get(q.data) && q.data.match(i) && (q.data = P(q.data.match(i)[1], c));
                if ("object" === k.get(q.data)) for (; f;) for (o in f = !1, q.data) "string" === k.get(q.data[o]) && q.data[o].match(i) && (q.data[o] = P(q.data[o].match(i)[1], c), f = !0);
                q.success = function(b) {
                    var F, f, e, d, aa = {}, ia = [],
                        m = [],
                        p = {}, n = !1,
                        z = a.path || g.path,
                        m = a.setter || g.setter,
                        s = a.success || g.success;
                    d = a.expect || g.expect || C("expect");
                    if ("function" === k.get(d) && !d.call(j(), b, a, g)) q.error.call(this, "Unexpected data received.", this.xhr());
                    else {
                        B('Service "' + g.id + '" successfull.');
                        "string" === k.get(m) && m.match(i) && (m = P(m.match(i)[1], c));
                        "string" === k.get(z) && z.match(i) && (z = P(z.match(i)[1], c));
                        d = b;
                        (z || "")
                            .match(/^(?:\w+\.)*\w+$/) ? f = k.get(z, "string") ? z.split(".") : h : "string" === k.get(z) && t('Path "' + z + '" does not match RegExp /^(?:\\w+\\.)*\\w+$/');
                        if (f) for (F in f) d = d[f[F]], d === h && t('Wrong path "' + z + '" for service "' + g.id + '".');
                        f = w.array(g.events);
                        for (F in f) aa[f[F]] = 1, n = !0;
                        f = w.array(a.events);
                        for (F in f) aa[f[F]] = 1, n = !0;
                        m && D[m] && d !== h && (p[m] = d, n = !0);
                        if ("function" === k.get(s)) {
                            b = G(s, {
                                parameters: [b, a],
                                scope: {
                                    request: !0,
                                    dispatchEvent: !0
                                }
                            });
                            f = w.array(b.events);
                            for (o in f) n = !0, aa[f[o].type] = 1;
                            for (o in b.update) p[o] === h ? (p[o] = b.update[o], n = !0) : t('The key "' + o + '" is nor a method neither a property.');
                            if ((b.services || [])
                                .length) n = !0, ia = ia.concat(b.services);
                            l(b)
                        }
                        m = [];
                        for (e in aa) I.dispatchEvent(e, j()), m.push(I.getEvent(e, j()));
                        n && r({
                            events: m,
                            update: p,
                            services: ia
                        })
                    }
                };
                f = a.before || g.before;
                null != f && "function" === k.get(f) && G(f, {
                    parameters: [a],
                    loop: !0,
                    scope: {
                        dispatchEvent: !0
                    }
                });
                a.abort && ba[g.id] && ba[g.id].abort();
                ba[g.id] = w.ajax(q)
            };
            return I
        }
        function e(b, g) {
            var a, c = {}, e = {}, q, r, d;
            b === h && p("Module class not specified.");
            "function" !== k.get(b) && p("First parameter must be a function.");
            b.apply(c, (g || [])
                .concat(j()));
            q = c.triggers || {};
            for (d in q.events || {}) R[d] = R[d] || [], R[d].push(q.events[d]);
            for (r in q.properties || {}) {
                for (a in V[r] || []) S[r] = S[r] || [], S[r].push(q.properties[r]);
                E[r] !== h && (o(r), G(q.properties[r], {
                    parameters: [j()]
                }))
            }
            for (d in Q || {}) e[d] = 1;
            for (d in H || {}) e[d] = 1;
            for (d in J || {}) e[d] = 1;
            for (d in e) c.addEventListener(d, f);
            X.push(c);
            return c
        }
        function c(b, g) {
            var a = "object" === typeof b && 1 === arguments.length ? b || {} : {};
            "string" === typeof b && (a[b] = g);
            r({
                update: a
            });
            return this
        }
        function f(b) {
            r({
                events: [b]
            })
        }
        function r(b) {
            var g, a, c, f, d, e, o, i = !1,
                k = [],
                p = [],
                n = [],
                b = b || {}, s = {}, v = {};
            b.loop = (+b.loop || 0) + 1;
            var u = w.array(b.events);
            e = w.array(b.services);
            var x = b.update || {};
            if (C("verbose")) {
                B("Iteration " + b.loop + " (main loop)");
                if (u.length) {
                    o = [];
                    for (a in u) o.push(u[a].type);
                    B(" -> Events: ", o)
                }
                if (e.length) {
                    o = [];
                    for (a in e) o.push(e[a].service);
                    B(" -> Services: ", o)
                }
                o = [];
                for (a in x) o.push(a);
                o.length && B(" -> Update: ", o)
            }
            for (g in x) if (D[g] === h) t('The property "' + g + '" is not referenced.');
            else if (o = z(g, x[g]) || !! b.force) {
                for (a in S[g]) G(S[g][a], {
                    parameters: [j(), {
                        property: g
                    }]
                });
                for (a in V[g] || []) s[V[g][a]] = 1
            }
            for (a in e || []) m(e[a].service, e[a].params);
            for (a in u) {
                d = u[a];
                for (c in e = d.data || {}, g = Q[d.type] || [], g) e[g[c]] !== h && (i = !0, v[g[c]] = e[g[c]]);
                for (f in R[d.type]) G(R[d.type][f], {
                    parameters: [j(), d]
                });
                for (c in H[d.type] || []) if (0 > k.indexOf(H[d.type][c])) {
                    k.push(H[d.type][c]);
                    e = G(H[d.type][c], {
                        parameters: [d],
                        scope: {
                            request: !0,
                            dispatchEvent: !0
                        }
                    });
                    g = w.array(e.events);
                    for (f in g) s[g[f].type] = 1;
                    for (f in e.update) v[f] === h ? (i = !0, v[f] = e.update[f]) : t('The property "' + f + '" has already been updated in the current loop.');
                    if ((e.services || [])
                        .length) i = !0, n = n.concat(e.services);
                    l(e)
                }
                for (c in J[d.type] || []) s[J[d.type][c]] = 1
            }
            for (d in s) I.dispatchEvent(d, j()), p.push(I.getEvent(d, j())), i = !0;
            i && r({
                events: p,
                update: v,
                services: n,
                loop: b.loop
            })
        }
        function o(b) {
            if (E[b]) {
                if (ha[b]) {
                    for (var a = [], c = {}, f = 1, d = arguments.length; f < d; f++) a.push(arguments[f]);
                    c[b] = M[b];
                    a = G(E[b], {
                        parameters: a,
                        inputValues: c
                    });
                    return y(b) ? w.clone(a.returned) : a.returned
                }
                return y(b) ? w.clone(E[b]()) : E[b]()
            }
            t('Property "' + b + '" not referenced.')
        }
        function z(b, a) {
            if (D[b]) {
                if (ga[b]) {
                    var c, f;
                    c = [];
                    f = {};
                    y(b) && (a = w.clone(a));
                    f[b] = o(b);
                    for (var d = 1, e = arguments.length; d < e; d++) c.push(arguments[d]);
                    f = G(D[b], {
                        parameters: c,
                        inputValues: f
                    });
                    (c = "boolean" !== k.get(f.returned) || f.returned) && (M[b] = f.update[b]);
                    return c
                }
                return D[b].call(j(), y(b) ? w.clone(a) : a)
            }
            t('Property "' + b + '" not referenced.');
            return !1
        }
        function m(b, a) {
            if (W[b]) W[b](a);
            else t('Service "' + b + '" not referenced.');
            return this
        }
        function G(b, a) {
            var c, f, d = a || {}, e = j(d.scope);
            "function" !== k.get(b) && p("The first parameter must be a function");
            for (c in d.inputValues || {}) e[c] = d.inputValues[c];
            f = {
                returned: b.apply(e, d.parameters || []),
                update: {},
                events: [],
                services: []
            };
            null != e._events && !k.check("array", e._events) ? t("Events must be stored in an array.") : f.events = e._events;
            for (c in e) D[c] !== h ? f.update[c] = e[c] : $[c] === h && t('The key "' + c + '" is not a method nor a property.');
            for (c in d.inputValues) f.update[c] = e[c];
            for (c in e._services) f.services[c] = e._services[c];
            if (d.loop) {
                d = (f.services || [])
                    .length || (f.events || [])
                    .length;
                if (!d) for (c in f.update) d = !0;
                d && r(f)
            } else return f
        }
        function oa(b) {
            return K[b]
        }

        function A(b) {
            return O[b]
        }
        function P(b) {
            var a = b,
                c = (b || "")
                    .toString()
                    .match(RegExp("^" + C("shortcutPrefix") + "(\\w+)$"));
            c && c.length && (t("Prefix in expand() calls is deprecated."), a = c[1]);
            for (var c = 1, f = arguments.length; c < f; c++) if ((arguments[c] || {})[a] !== h) return arguments[c][a];
            if ("function" === k.get(E[a])) return o(a);
            if ("function" === k.get(Y[a])) return Y[a].call(j());
            t('The shortcut "', a, '" has not been recognized.');
            return a
        }
        function y(b) {
            b = (fa[b] || {})
                .clone;
            return b !== h ? !! b : C("clone")
        }
        function T() {
            var b;
            B('Killing instance "' + x + '"');
            for (b in X) X[b].removeEventListener();
            Y = ba = W = J = H = S = R = V = Q = X = ga = ha = M = D = E = O = K = N = X = null;
            for (b in Z) delete Z[b];
            U[x] && delete U[x]
        }
        function C(b, a) {
            if ("string" === typeof b && 1 === arguments.length) return ca[b] !== h ? ca[b] : L[b];
            var c = "object" === typeof b && 1 === arguments.length ? b || {} : {};
            "string" === typeof b && (c[b] = a);
            for (var f in c) c[f] !== h ? ca[f] = c[f] : delete ca[f];
            return this
        }
        function t() {
            var b = ["[" + (x || "domino") + "]"];
            C("strict") || b.push("WARNING");
            for (var a in arguments) b.push(arguments[a]);
            C("strict") ? u.apply(this, b) : C("verbose") && da.apply(this, b)
        }
        function p() {
            var b = ["[" + (x || "domino") + "]"],
                a;
            for (a in arguments) b.push(arguments[a]);
            u.apply(this, b)
        }
        function B() {
            var b = ["[" + (x || "domino") + "]"];
            if (C("verbose")) {
                for (var a in arguments) b.push(arguments[a]);
                da.apply(this, b)
            }
        }
        la.call(this);
        var I = this,
            w = s.utils,
            k = s.struct,
            ca = {}, Z, N = {}, K = {}, O = {}, E = {}, D = {}, M = {}, fa = {}, ha = {}, ga = {}, X = [],
            Q = {}, V = {}, R = {}, S = {}, H = {}, J = {}, W = {}, ba = {}, Y = {}, $ = {
                events: 1,
                services: 1,
                hacks: 1
            };
        (function() {
            for (var b in Object.prototype) $[b] = 1;
            for (b in j({
                full: !0
            })) $[b] = 1
        })();
        Z = j({
            full: !0
        });
        var v = {}, x;
        "string" === k.get(a) ? x = a : a !== h && "object" === k.get(a) ? v = a : d !== h && "object" === k.get(d) && (v = d);
        (x = v.name) && (U[x] ? p('An instance named "' + x + '" is already running.') : U[x] = Z);
        (function() {
            for (var b in v.properties || []) i(v.properties[b].id, v.properties[b]);
            for (b in v.hacks || []) {
                var a = void 0,
                    c = void 0,
                    f = v.hacks[b] || {};
                f.triggers === h && p("A hack requires at least one trigger to be bound");
                a = w.array(f.triggers);
                for (c in a) J[a[c]] = J[a[c]] || [], H[a[c]] = H[a[c]] || [], f.method && H[a[c]].push(f.method), f.dispatch && (J[a[c]] = J[a[c]].concat(w.array(f.dispatch)))
            }
            for (b in v.services || []) n(v.services[b]);
            for (b in v.shortcuts || []) a = v.shortcuts[b].id, c = v.shortcuts[b].method, a === h && p("Shortcut ID not specified."), Y[a] && p('Shortcut "' + a + '" already exists.'), c === h && p("Shortcut method not specified."), Y[a] = c
        })();
        return Z
    };
    var s = K.domino;
    s.utils = {
        array: function(a, d) {
            var h = "string" === s.struct.get(a) ? a.split(d || " ") : "array" === s.struct.get(a) ? a : [a],
                l = [],
                i;
            for (i in h) h[i] && l.push(h[i]);
            return l
        },
        clone: function(a) {
            if (!a) return a;
            var d, h;
            if ("array" === y.get(a)) for (h in d = [], a) d[h] = this.clone(a[h]);
            else if ("date" === y.get(a)) d = new Date(a.getTime());
            else if ("object" === y.get(a)) if (a.prototype) d = a;
            else {
                d = {};
                for (var l in a) d[l] = this.clone(a[l])
            } else d = a;
            return d
        },
        ajax: function(a, d) {
            "string" === typeof a ? a = {
                url: a,
                ok: d
            } : "object" !== y.get(a) && u("[domino.global] Invalid parameter given to AJAX");
            var h = a.type || "GET",
                l = a.url || "",
                i = a.contentType || "application/x-www-form-urlencoded",
                n = a.dataType || "json",
                e = new XMLHttpRequest,
                c, f, r;
            if (a.data) {
                if ("string" === typeof a.data) f = a.data;
                else if (/json/.test(i)) f = JSON.stringify(a.data);
                else {
                    f = [];
                    for (r in a.data) f.push(encodeURIComponent(r) + "=" + encodeURIComponent(a.data[r]));
                    f = f.join("&")
                }
                /GET|DEL/i.test(h) && (l += /\?/.test(l) ? "&" + f : "?" + f, f = "")
            }
            e.onreadystatechange = function() {
                if (4 == e.readyState) if (c && clearTimeout(c), /^2/.test(e.status)) {
                    f = e.responseText;
                    if (/json/.test(n)) try {
                        f = JSON.parse(e.responseText)
                    } catch (d) {
                        return a.error && a.error("JSON parse error: " + d.message, e)
                    }
                    a.success && a.success(f, e)
                } else {
                    var h = +e.status ? e.responseText : e.responseText.length ? "Aborted: " + e.responseText : "Aborted";
                    a.error && a.error(h, e)
                }
            };
            e.open(h, l, !0);
            e.setRequestHeader("Content-Type", i);
            if (a.headers) for (r in a.headers) e.setRequestHeader(r, a.headers[r]);
            a.timeout && (c = setTimeout(function() {
                e.onreadystatechange = function() {};
                e.abort();
                a.error && a.error && a.error("timeout", e)
            }, 1E3 * a.timeout));
            e.send(f);
            return e
        }
    };
    s.struct = function() {
        var a = ["number", "string", "boolean", "null", "undefined"],
            d = "Boolean,Number,String,Function,Array,Date,RegExp,Object".split(","),
            j = {}, l = ["*"],
            i = {}, n;
        for (n in d) {
            var e = d[n];
            l.push(e.toLowerCase());
            j["[object " + e + "]"] = e.toLowerCase()
        }
        return {
            add: function(a, f, d) {
                var e, j, m, n, y, A;
                1 === arguments.length ? "object" === this.get(a) ? (A = a, m = A.id, y = A.struct) : u("[domino.global] If struct.add is called with one arguments, it has to be an object") : 2 === arguments.length ? ("string" !== this.get(a) || !a ? u("[domino.global] If struct.add is called with more than one arguments, the first one must be the string id") : m = a, y = f) : u("[domino.global] struct.add has to be called with one or three arguments");
                ("string" !== this.get(m) || 0 === m.length) && u("[domino.global] A structure requires an string id");
                i[m] !== h && "proto" !== i[m] && u('[domino.global] The structure "' + m + '" already exists');
                i[m] = 1;
                j = s.utils.array((A || {})
                    .proto);
                n = {};
                for (e in j) i[j[e]] === h && (i[j[e]] = 1, n[j[e]] = 1);
                "function" !== this.get(y) && !this.isValid(y) && u('[domino.global] A structure requires a valid "structure" property describing the structure. It can be a valid structure or a function that test if an object matches the structure.');~l.indexOf(m) && u('[domino.global] "' + m + '" is a reserved structure name');
                i[m] = A === h ? {
                    id: m,
                    struct: y
                } : {};
                if (A !== h) for (e in A) i[m][e] = A[e];
                for (e in n) e !== m && delete i[e]
            },
            get: function(a) {
                return null == a ? "" + a : j[Object.prototype.toString.call(a)] || "object"
            },
            check: function(a, f) {
                var d, e, j = this.get(f);
                if ("string" === this.get(a)) {
                    d = a.replace(/^\?/, "")
                        .split(/\|/);
                    for (e in d) if (0 > l.indexOf(d[e]) && i[d[e]] === h) return ja("[domino.global] Invalid type"), !1;
                    if (null == f) return !!a.match(/^\?/, "");
                    a.replace(/^\?/, "");
                    for (e in d) if (i[d[e]] && ("function" === this.get(i[d[e]].struct) && !0 === i[d[e]].struct(f) || this.check(i[d[e]].struct, f))) return !0;
                    return !(!~d.indexOf("*") && !~d.indexOf(j))
                }
                if ("object" === this.get(a)) {
                    if ("object" !== j) return !1;
                    for (d in a) if (!this.check(a[d], f[d])) return !1;
                    for (d in f) if (a[d] === h) return !1;
                    return !0
                }
                if ("array" === this.get(a)) {
                    if ("array" !== j) return !1;
                    if (1 !== a.length) return ja("[domino.global] Invalid type"), !1;
                    for (d in f) if (!this.check(a[0], f[d])) return !1;
                    return !0
                }
                return !1
            },
            deepScalar: function(c) {
                var f;
                if ("string" === this.get(c)) {
                    c = c.replace(/^\?/, "")
                        .split(/\|/);
                    for (f in c) if (0 > a.indexOf(c[f])) return !1;
                    return !0
                }
                if (this.check("object|array", c)) {
                    for (f in c) if (!this.deepScalar(c[f])) return !1;
                    return !0
                }
                return !1
            },
            compare: function(a, f, d) {
                this.get(a);
                this.get(f);
                var e;
                if (!this.deepScalar(d) || !this.check(d, a) || !this.check(d, f)) return !1;
                if ("string" === this.get(d)) return a === f;
                if ("object" === this.get(d)) {
                    for (e in d) if (!this.compare(a[e], f[e], d[e])) return !1;
                    return !0
                }
                if ("array" === this.get(d)) {
                    if (a.length !== f.length) return !1;
                    var h = a.length;
                    for (e = 0; e < h; e++) if (!this.compare(a[e], f[e], d[0])) return !1;
                    return !0
                }
                return !1
            },
            isValid: function(a) {
                var d, e;
                if ("string" === this.get(a)) {
                    a = a.replace(/^\?/, "")
                        .split(/\|/);
                    for (e in a) if (0 > l.indexOf(a[e]) && i[a[e]] === h) return !1;
                    return !0
                }
                if ("object" === this.get(a)) {
                    for (d in a) if (!this.isValid(a[d])) return !1;
                    return !0
                }
                return "array" === this.get(a) ? 1 === a.length ? this.isValid(a[0]) : !1 : !1
            }
        }
    }();
    var T = s.utils,
        y = s.struct,
        L = {
            strict: !1,
            verbose: !1,
            shortcutPrefix: ":",
            displayTime: !1,
            clone: !1
        };
    s.settings = function(a,
    d) {
        if ("string" === typeof a && 1 === arguments.length) return L[a];
        var j = "object" === typeof a && 1 === arguments.length ? a || {} : {};
        "string" === typeof a && (j[a] = d);
        for (var l in j) j[l] !== h ? L[l] = j[l] : delete L[l];
        return this
    };
    s.instances = function(a) {
        if (arguments.length) return U[a];
        u("[domino.global] You need to indicate a name to get the instance.")
    };
    s.EventDispatcher = function() {
        var a = {};
        this.removeEventListener = function(d, h) {
            if (!arguments.length) return this._handlers_ = {}, this;
            var l, i, n, e, c = T.array(d);
            if (h) for (l in c) {
                e = c[l];
                if (a[e]) {
                    n = [];
                    for (i in a[e]) a[e][i].handler !== h && n.push(a[e][i]);
                    a[e] = n
                }
                a[e] && 0 === a[e].length && delete a[e]
            } else for (l in c) delete a[c[l]];
            return this
        };
        this.addEventListener = function(d, h) {
            if (arguments.length) if (1 === arguments.length && "object" === T.type.get(arguments[0])) for (d in arguments[0]) this.addEventListener(d, arguments[0][d]);
            else if (1 < arguments.length) {
                var l, d = arguments[0],
                    h = arguments[1],
                    i = T.array(d),
                    n;
                for (n in i) l = i[n], a[l] || (a[l] = []), a[l].push({
                    handler: h
                })
            }
            return this
        };
        this.dispatchEvent = function(d, j) {
            var l, i, n, e, c, f = T.array(d),
                j = j === h ? {} : j;
            for (l in f) if (c = f[l], a[c]) {
                e = this.getEvent(c, j);
                n = [];
                for (i in a[c]) a[c][i].handler(e), a[c][i].one || n.push(a[c][i]);
                a[c] = n
            }
            return this
        };
        this.getEvent = function(a, h) {
            return {
                type: a,
                data: h,
                target: this
            }
        }
    };
    var la = s.EventDispatcher;
    s.module = function() {
        la.call(this);
        this.triggers = {
            properties: {},
            events: {}
        }
    }
})(window);